<template>
  <!-- 店铺成员 -->
  <el-container id="shopMember">
      <div class="showMember_content_taber">
        <!-- 员工 -->
         <el-table
          :data="staffData"
           @row-click="rowClick">
          <el-table-column
                type="selection"
                width="55">
              </el-table-column>
            <el-table-column min-width="70">
              <template slot-scope="scope">
                <div class="img">
                  <img :src="scope.row.avatar">
                </div>
              </template>
          </el-table-column>
          <el-table-column
            prop="name"
            label="员工姓名">
          </el-table-column>
          <el-table-column
            prop="phone"
            label="手机号码">
          </el-table-column>
          <el-table-column
            prop="currentMonthOrderTotalPrice"
            label="当月业绩">
          </el-table-column>
          <el-table-column
            prop="position"
            label="职位">
          </el-table-column>
          <el-table-column
            label="操作"
            >
            <template slot-scope="scope">
              <el-button @click.stop="staffBtn('update',scope.row.id)" type="primary" size="mini">编辑</el-button>
              <el-button type="primary" size="mini" @click.stop="stopStaffBtn(scope.row.id)" v-if="scope.row.staff_status == 1">停用</el-button>
              <el-button type="primary" size="mini" @click.stop="stopStaffBtn(scope.row.id)" v-if="scope.row.staff_status == 2">启用</el-button>
              <el-button type="primary" size="mini" @click.stop="delStaff(scope.row.id)" v-if="scope.row.staff_status == 2">删除</el-button>
            </template>
          </el-table-column>
        </el-table>
      </div>
    <!-- 员工弹框 -->
    <el-dialog :title="staffType" :visible.sync="staffDislog" width="25%" class="staffDislog"  :before-close="close">
  <el-form :model="updateStaffForm" :rules="rules" ref="staffForm">
    <el-form-item label="电话:" label-width="70px" prop="phone">
      <el-input v-model="updateStaffForm.phone" auto-complete="off" placeholder="请输入电话号码" @blur="showCode" disabled ></el-input>
    </el-form-item>
     <el-form-item label="验证码:" label-width="70px" prop="verifyCode" v-if="isShowCode">
      <el-input v-model="updateStaffForm.verifyCode" auto-complete="off" placeholder="请输入验证码"></el-input>
      <el-button class="getCodeBtn" type="text" @click="getCodeBtn" :disabled="disabled">{{codeText}}</el-button>
    </el-form-item>
     <el-form-item label="姓名:" label-width="70px" prop="name">
      <el-input v-model="updateStaffForm.name" auto-complete="off" placeholder="请输入姓名"></el-input>
    </el-form-item>
     <el-form-item label="职位:" label-width="70px" prop="position">
      <el-input v-model="updateStaffForm.position" auto-complete="off" placeholder="请输入职位"></el-input>
    </el-form-item>
     <el-form-item label="部门:" label-width="70px" prop="department">
      <el-select v-model="updateStaffForm.department" placeholder="请选择部门">
        <el-option
          v-for="item in departmentData"
          :key="item.id"
          :label="item.department_name"
          :value="item.id">
        </el-option>
      </el-select>
    </el-form-item>
    <el-form-item label="权限:" label-width="70px">
      <span class="span" @click="showCompetence">
        点击弹出权限表
        <span class="icon el-icon-arrow-right"></span>
      </span>
    </el-form-item>
  </el-form>
   <div class="CompetenceDislog" v-if="CompetenceDislog">
     <div class="CompetenceDislog_header">
       <p>选择权限</p>
     </div>
     <div class="CompetenceDislog_content">
          <el-checkbox-group v-model="checkCompetenceArr"  @change="selectDescription">
            <el-checkbox :label="item.name" v-for=" (item,index) in competenceData" :key="index">{{item.description}}</el-checkbox>
          </el-checkbox-group>
     </div>
     <div class="CompetenceDislog_footer">
       <span @click="hideCompetenceDislog">取消</span>
       <span class="isOk" @click="selectDescriptionBtn">保存</span>
     </div>
  </div>
  <div slot="footer" class="dialog-footer">
    <el-button @click="close">取 消</el-button>
    <el-button type="primary" @click="staffIsOk" >保存</el-button>
  </div>
</el-dialog>
 <el-dialog :visible.sync="cardDislog" width="25%" title="店铺成员信息" class="card_dislog">
   <el-form v-if="cardForm">
    <el-form-item :label="cardForm.name+'的名片：'" label-width="140px">
      <span class="span" @click="showCard(cardForm.id)">
        点击查看名片
        <span class="icon el-icon-arrow-right"></span>
      </span>
    </el-form-item>
      <el-form-item :label="cardForm.name+'的客户：'" label-width="140px">
      <span class="span" @click="goCustomer(cardForm.id)">
        点击查看客户
        <span class="icon el-icon-arrow-right"></span>
      </span>
    </el-form-item>
      <el-form-item :label="cardForm.lastMonth+'月的业绩：'" label-width="140px">
      <span class="span" @click="goStatistical(cardForm.lastMonth)">
        点击查看业绩
        <span class="icon el-icon-arrow-right"></span>
      </span>
    </el-form-item>
    <el-form-item :label="cardForm.nowMonth+'月的业绩：'" label-width="140px">
      <span class="span"  @click="goStatistical(cardForm.nowMonth)">
        点击查看业绩
        <span class="icon el-icon-arrow-right"></span>
      </span>
    </el-form-item>
    <el-form-item  :label="cardForm.name+'的权限：'" label-width="140px">
      <span class="span"  @click="showCompetence">
        点击弹出权限表
        <span class="icon el-icon-arrow-right"></span>
      </span>
    </el-form-item>
    <div class="CompetenceDislog" v-if="CompetenceDislog">
     <div class="CompetenceDislog_header">
       <p>拥有的权限</p>
     </div>
     <div class="CompetenceDislog_content">
          <el-checkbox-group v-model="checkCompetenceArr"  @change="selectDescription">
            <el-checkbox :label="item.name" v-for=" (item,index) in competenceData" :key="index" disabled>{{item.description}}</el-checkbox>
          </el-checkbox-group>
     </div>
  </div>
   <div class="card_item" v-if="isShowCard">
     <span style="font-size: 16px">{{cardForm.name}}的名片</span>
     <div class="code">
       <!-- <p>迈邦</p> -->
       <!-- <qrcode :value="code" :options="{ size: 150 }" style="margin: 10px 0"></qrcode> -->
       <img :src="code"  style="width: 150px;height: 150px;margin: 10px 0">
       <p>扫描二维码,进入商城关注</p>
     </div>
     <!-- <p style="margin:20px 0">迈邦</p> -->
     <div class="code_footer">
       <!-- <el-button type="primary" size="small">分享</el-button> -->
     </div>
   </div>
</el-form>
  <div slot="footer" class="dialog-footer">
    <el-button @click="cardDislog = false" size="small">取消</el-button>
    <el-button type="primary" @click.stop="staffBtn('update',cardForm.id)" size="small">编辑</el-button>
  </div>
 </el-dialog>
  </el-container>
</template>

<script>
import {
  getMembersList,
  getDepartmentsList,
  createStaff,
  verifyCode,
  permissions,
  createDepartment,
  updateDepartment,
  deleteDepartment,
  deleteStaff,
  updateStaff,
  stopStaff,
  staffdetails,
  getDepartmentStaff,
  staffcard
} from "@/api/shop/members/members";
export default {
  data() {
    return {
      departmentName: null,
      departmentId: null,
      permissions: [], //选择的权限
      competenceData: [],
      checkCompetenceArr: [],
      value: null,
      staffForm: {
        phone: null,
        name: null,
        position: null,
        verifyCode: null,
        permissions: [],
        department: null
      },
      updateStaffForm: {
        staffId: null,
        phone: null,
        verifyCode: null,
        name: null,
        position: null,
        permissions: [],
        department: null
      },
      codeText: "获取验证码",
      isShowCode: false,
      disabled: false,
      CompetenceDislog: false,
      staffType: null,
      // 部门弹框
      departmentDislog: false,
      departmentTitle: null,
      staffDislog: false,
      departmentData: [],
      staffData: [],
      rules: {
        name: [
          { required: true, message: "请输入姓名", trigger: "blur" },
          { min: 1, max: 20, message: "长度在 1 到 20 个字符", trigger: "blur" }
        ],
        phone: [
          { required: true, message: "请输入手机号码", trigger: "blur" },
          { min: 11, max: 11, message: "请输入正确的手机号码", trigger: "blur" }
        ],
        verifyCode: [
          { required: true, message: "请输入验证码", trigger: "blur" },
          { min: 6, max: 6, message: "请输 入正确的验证码", trigger: "blur" }
        ]
      },
      phone: null,
      cardDislog: false,
      cardForm: null,
      code:"",
      isShowCard: false
    };
  },
  watch: {
    stf(val) {
      this.staffData = val;
      this.checkCompetenceArr = val.permissions
      console.log(val, "这是传过来的");
    }
  },
  props: ["stf", "isDepartmentId"],
  methods: {
    showCard(id){ //显示个人名片
      let data = {
        staffId: id
      }
       staffcard(id).then(res=>{
         console.log(res)
         this.code = res.data.data.or_code
         this.CompetenceDislog = false
         this.isShowCard = !this.isShowCard
       })
    },
    rowClick(row){
      console.log(row)
      this.cardForm = row
       this.cardDislog = true
       this.isShowCard = false
       this.CompetenceDislog = false

    },
    goStatistical(date){
      this.$router.push({name: "销售统计",params:{staffId: this.cardForm.id,date: date }})
    },
    goCustomer(id){
      this.$router.push({path: "/customer/customerList",query:{id:id}})
    },
    showCode() {
      if (this.updateStaffForm.phone !== this.phone) {
        console.log("不一样");
        this.isShowCode = true;
      } else {
        this.isShowCode = false;
      }
    },
    getDepartmentStaffFn() {
      //请求部门成员
      let data = {
        departmentId: this.isDepartmentId,
        page: this.page
      };
      getDepartmentStaff(data).then(res => {
        console.log(res, "Asdasd");
        this.staffData = res.data.data.staffs.staffs;
        this.total = res.data.data.staffs.totalCount;
        console.log(this.staffData);
      });
    },
    stopStaffBtn(id) {
      let data = {
        staffId: id
      };
      stopStaff(data).then(res => {
        if (res.data.code == 200) {
          this.new("修改成功");
        } else {
          this.$message({
            type: "error",
            message: res.data.error
          });
        }
        console.log(res.data.error)
        console.log(res);
      });
    },
    getMembersListFn() {
      getMembersList().then(res => {
        //请求未分组成员列表
        console.log(res, "成员列表");
        this.departmentData = res.data.data.departments;
        res.data.data.departments.forEach(val => {});
        this.staffData = res.data.data.staffs.staffs;
      });
    },
    updateStaffFn() {
        // console.log( this.updateStaffForm)
      updateStaff(this.updateStaffForm).then(res => {
        console.log(res);
         this.$refs["staffForm"].resetFields();
        if(res.data.code == 200){
            this.new("修改成功")
        }else{
            this.$message({
                type:"error",
                message:res.data.error
            })
        }
      });
    },
    staffIsOk() {
      //创建成员按钮
      if (this.staffType == "添加员工") {
        this.$refs["staffForm"].validate(valid => {
          console.log(valid);
          if (valid) {
            this.createStaffFn();
          } else {
            return;
          }
          this.$refs["staffForm"].resetFields();
          this.staffDislog = false;
        });
      } else {
        this.$refs["staffForm"].validate(valid => {
          console.log(valid);
          if (valid) {
            this.updateStaffFn();
          } else {
            return;
          }
         
          this.staffDislog = false;
        });
      }
    },
    //获取验证码
    getCodeBtn() {
      let data = {
        phone: this.updateStaffForm.phone
      };
      verifyCode(data).then(res => {
        this.codeText = 60;
        this.disabled = true;
        let that = this;
        let time = setInterval(function() {
          that.codeText = that.codeText - 1;
          if (that.codeText == 0) {
            that.codeText = "重新获取验证码";
            that.disabled = false;
            clearInterval(time);
          }
        }, 1000);
      });
    },
    permissionsFn() {
      //获取权限表
      permissions().then(res => {
        console.log("权限表", res);
        this.competenceData = res.data.data;
      });
    },
    //删除成员操作
    delStaff(id) {
      this.$confirm("删除后将无法恢复, 是否继续?", "提示", {
        confirmButtonText: "确定",
        cancelButtonText: "取消",
        type: "warning"
      })
        .then(() => {
          let data = {
            staffId: id
          };
          deleteStaff(data).then(res => {
            console.log(res);
            if (res.data.code == 200) {
              this.new("删除成功");
            } else {
              this.$message({
                type: "error",
                message: res.data.error
              });
            }
          });
        })
        .catch(() => {
          this.$message({
            type: "info",
            message: "已取消删除"
          });
        });
    },
    // 创建员工
    staffBtn(type, id) {
      this.cardDislog = false
      console.log(id);
      if (type == "create") {
        this.staffForm.permissions = [];
        this.checkCompetenceArr = [];
        this.staffType = "添加员工";
        this.staffDislog = true;
        this.CompetenceDislog = false;
      } else {
        let data = {
          staffId: id
        };
        staffdetails(data).then(res => {
          console.log(res)
          this.staffType = "编辑员工";
          this.staffForm = res.data.data;
          this.updateStaffForm.staffId = res.data.data.id
          if(res.data.data.department_id != 0){
            this.updateStaffForm.department = res.data.data.department_id
          }
          this.updateStaffForm.phone = res.data.data.phone
          this.updateStaffForm.position = res.data.data.position
          this.updateStaffForm.permissions = res.data.data.permissions
          this.updateStaffForm.name = res.data.data.name
          this.phone = res.data.data.phone;
          this.staffDislog = true;
          this.CompetenceDislog = false;
        });
        getDepartmentsList().then(res => {
          console.log(res, "这是部门列表");
          this.departmentData = res.data.data;
        });
      }
    },
    //显示权限表
    showCompetence() {
      this.isShowCard = false
      if(this.cardDislog){
         this.checkCompetenceArr = this.cardForm.permissions
      }else{
         this.checkCompetenceArr = this.updateStaffForm.permissions;
      }
      this.CompetenceDislog = !this.CompetenceDislog;
    },
    // 关闭权限表
    hideCompetenceDislog() {
      this.checkCompetenceArr = [];
      this.CompetenceDislog = false;
    },
    selectDescription(value) {
      //选择权限
      console.log(this.checkCompetenceArr);
    },
    selectDescriptionBtn() {
      //确定选择权限
      this.updateStaffForm.permissions = this.checkCompetenceArr;
      this.CompetenceDislog = false;
    },
    close() {
      this.$confirm("未保存是否退出？", "提示", {
        confirmButtonText: "确定",
        cancelButtonText: "取消",
        type: "warning"
      })
        .then(() => {
          this.$refs["staffForm"].resetFields();
          this.staffDislog = false;
        })
        .catch(() => {});
    },
    new(value) {
      if (this.isDepartmentId) {
        this.getDepartmentStaffFn();
      } else {
        this.getMembersListFn();
      }
      this.departmentDislog = false;
      this.$message({
        message: value,
        type: "success"
      });
    }
  },
  mounted() {
    // this.getMembersListFn();
    if (this.isDepartmentId) { //判断部门
      this.getDepartmentStaffFn();
    }
    this.permissionsFn();
  }
};
</script>
<style scoped>
.card_dislog >>> .el-form-item{
  padding: 10px 0;
  border-bottom: 1px solid #e5e5e5
}
#shopMember {
  width: 100%;
}
.shopMember_content_left {
  width: 100%;
}
.header {
  width: 100%;
  background: white;
  height: 60px;
  border-left: 1px solid #f2f2f2;
  line-height: 60px;
  font-size: 14px;
}
.shopMember_content {
  padding-left: 10px;
  width: 100%;
  height: 100%;
}
.shopMember_content_header {
  background: white;
  height: 60px;
  width: 100%;
  line-height: 60px;
  padding-left: 10px;
}
.img img {
  width: 60px;
  height: 60px;
}
/* 表格 */
.showMember_content_taber {
  background: white;
  border-radius: 5px;
  width: 100%;
  margin-top: 10px;
}
.showMember_content_taber >>> .el-table th {
  background-color: #f8f8f8;
}
.showMember_content_taber >>> .el-table__row {
  cursor: pointer;
}
.showMember_content_taber >>> .el-select {
  width: 100% !important;
}

.span {
  width: 100%;
  display: block;
  height: 40px;
  text-align: center;
  color: #cccccc;
  cursor: pointer;
}
.icon {
  color: black;
  font-size: 28px;
  line-height: 40px;
  float: right;
}
.CompetenceDislog {
  width: 300px;
  background: white;
  height: 100%;
  position: absolute;
  right: 0;
  top: 0;
  margin-right: -320px;
  border-radius: 2px;
}
.CompetenceDislog_header {
  width: 100%;
  height: 40px;
  background-color: #ffffff;
  font-size: 16px;
  line-height: 40px;
  text-align: center;
}
.CompetenceDislog_content {
  width: 100%;
  background-color: #f2f2f2;
  height: calc(100% - 80px);
  overflow-y: auto;
}
.card_item{
 width: 300px;
  background: white;
  height: 400px;
  position: absolute;
  right: 0;
  top: 0;
  margin-right: -320px;
  border-radius: 2px;
}
.card_item{
  color: #333333;
  font-size: 14px;
  padding: 10px;
}
.card_item .code{
  text-align: center;
  margin: 10px 0;
}
.card_item .code_footer{
  text-align: center
}
.CompetenceDislog_footer {
  position: absolute;
  bottom: 0;
  width: 100%;
  height: 40px;
  font-size: 0;
  background: white;
  line-height: 40px;
}
.CompetenceDislog_footer span {
  display: inline-block;
  width: 50%;
  text-align: center;
  height: 100%;
  font-size: 14px;
  color: #333333;
  cursor: pointer;
}
.CompetenceDislog_footer .isOk {
  color: #1491f2;
}
.CompetenceDislog_content >>> .el-checkbox {
  display: block;
  width: calc(100% - 20px);
  padding: 10px;
  border-bottom: 1px solid #cccccc;
}
.CompetenceDislog_content >>> .el-checkbox__label {
  margin-left: 25px;
}
.CompetenceDislog_content >>> .el-checkbox + .el-checkbox {
  margin: 0;
}
.CompetenceDislog_content
  >>> .el-checkbox__input.is-checked
  .el-checkbox__inner,
.el-checkbox__input.is-indeterminate .el-checkbox__inner {
  color: white;
  background: #00cc00;
  border-color: #00cc00;
}
.CompetenceDislog_content >>> .el-checkbox__inner {
  border-radius: 50%;
  color: white
}
.CompetenceDislog_content
  >>> .el-checkbox__input.is-checked
  + .el-checkbox__label {
  color: #606266;
}
.getCodeBtn {
  border: none;
  position: absolute;
  right: 10px;
  top: 0;
}
</style>
