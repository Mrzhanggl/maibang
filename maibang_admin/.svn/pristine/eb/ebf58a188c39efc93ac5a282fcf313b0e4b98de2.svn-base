<!--添加商品-->
<template>
    <el-container class="publishProduct">
        <el-header class="bgFFF">
            <el-breadcrumb>
                <el-breadcrumb-item>
                    商品管理
                </el-breadcrumb-item>
                <el-breadcrumb-item>
                    发布商品
                </el-breadcrumb-item>
            </el-breadcrumb>
        </el-header>
        
        <el-main class="bgFFF">
            <el-row>
                <el-col :span="12" class="bgFFF">
                    <div class="arrow colorFFF">
                        1.编辑商品信息
                        <div class="jian">

                        </div>
                    </div>
                </el-col>
            </el-row>
            
            <el-row>
                <el-col :span="9" :offset="1" class="input">
                    <div class="box" v-for="(item,index) in input">
                        <span class="font14 soan">{{item.name}}：</span>
                        <input type="text" class="font14 inputpadd" v-model="item.value" @blur="blueChange(item.value,index)" @focus="focusChange(item.id)">
                        <i v-if="item.id==2 || item.id=='freightCostTemplate'" slot="prefix" class="el-icon-arrow-right right"></i>
                        <i v-if="item.id=='trialModels'" slot="prefix" class="el-icon-circle-plus-outline right"></i>
                        <i v-if="item.deleteIcom==true"  slot="prefix" class="el-icon-delete outer" @click="deleteattributes(index)"></i>
                        <p v-if="item.show">{{item.caveat}}</p>
                    </div>
                    <el-button type="primary" @click="addAttribute"><i class="el-icon-plus"></i>新增属性</el-button>
                </el-col>
            </el-row>

            <div  class="choose-category">      <!-- 配件分类 -->
                <el-dialog title="选择分类" :visible.sync="dialogTableVisible">
                    <p>选择配件分类</p>
                    <div class="overauto">
                        <div :class="{className:true,classChange:classNum==index}" v-for="(value,index) in selectAccessoriesClassification" @click="classChange(index)">
                            <span>{{value.classify_name}}</span>
                            <i v-if="classNum==index" class="icon"><img src="../../assets/goods/yes.png" alt=""></i>
                        </div>
                    </div>
                    <div class="save">
                        <button class="fr" @click="dialogTableVisible=false">确定</button>
                        <button class="fr" @click="dialogTableVisible=false">取消</button>
                    </div>
                </el-dialog>
            </div>

            <div  class="new-attribute">      <!-- 新增属性 -->
                <el-dialog title="选择分类" :visible.sync="newAttribute">
                    <p>自定义属性</p>
                    <div class="add-attribute">
                        <input class="txt" type="text" v-model="attributeAdd">
                        <button class="fr el-icon-plus" @click="customAttributes"></button>
                    </div>
                    <div class="overauto">
                        <div :class="{className:true,classChange:attributeNum==index}" v-for="(item,index) in attribute" @click="attributeChange(index)">
                            <i v-if="attributeNum==index" class="icon"><img src="../../assets/goods/yes.png" alt=""></i>
                            <span>{{item.name}}</span>
                            <span class="system" v-if="typeof(item.id)=='string'">系统</span>
                            <a class="delete" v-if="typeof(item.id)=='number'" @click.stop="attributeDelete(item.name)">删除</a>
                        </div>
                    </div>
                    <div class="save">
                        <button class="fr" @click="addattributes">确定</button>
                        <button class="fr" @click="newAttribute=false">取消</button>
                    </div>
                </el-dialog>
            </div>

            <el-row>
                <el-col :span="13" :offset="1" class="product-picture font14" >
                    <div class="img">
                        商品图片：
                        <el-upload
                        action=""
                        list-type="picture-card"
                        :on-preview="handlePictureCardPreview"
                        :on-remove="handleRemove"
                        :multiple='true'
                        :limit=5
                        :before-upload="beforeAvatarUpload"
                        :on-success='handleSuccess'>
                            <i class="el-icon-plus"></i>
                        </el-upload>
                    </div>
                    
                    <el-dialog :visible.sync="dialogVisible">
                    <img width="100%" :src="dialogImageUrl" alt="">
                    </el-dialog>
                    <p class="txt">建议尺寸：800*800像素，你可以拖拽图片调整顺序，最多5张</p>
                    <p class="red">最少需要一张商品图</p>
                </el-col>
            </el-row>
            <el-row>
                <el-col :span="9" :offset="1" class="product-attributes">
                    <p class="font14">商品颜色&尺寸&规格：<el-button type="text" @click="addProduct(1)">零售</el-button><span class="blue">|</span><el-button type="text" @click="addProduct(2)">批发</el-button></p>
                    <div class="line" v-for="(item,index) in product">
                        <div class="name">
                            <span class="txt">{{item.sku_name}}</span>
                            <el-button type="text" @click='edit(index)'>编辑</el-button>
                            <el-button type="text" @click="deleteSp(index)">删除</el-button>
                        </div>

                        <div class="retail"  v-if="item.sell_type==1">   <!--  零售 -->
                            <div class="price">
                                价格：
                                <span class="red">￥{{item.product_price}}</span>
                            </div>
                            <div class="instock">
                                库存：
                                <span>{{item.product_inventory}}</span>
                            </div>
                        </div>

                        <div class="wholesale" v-else> <!--批发-->
                            <table>
                                <tr>
                                    <td>价格</td>
                                    <td>￥{{item.wholesale_rules[0].sell_money}}</td>
                                    <td>￥{{item.wholesale_rules[1].sell_money}}</td>
                                    <td>￥{{item.wholesale_rules[2].sell_money}}</td>
                                </tr>
                                <tr>
                                    <td>起批价</td>
                                    <td>{{item.wholesale_rules[0].start_sum}}-{{item.wholesale_rules[0].end_sum}}件</td>
                                    <td>{{item.wholesale_rules[1].start_sum}}-{{item.wholesale_rules[1].end_sum}}件</td>
                                    <td>{{item.wholesale_rules[2].start_sum}}-{{item.wholesale_rules[2].end_sum}}件</td>
                                </tr>
                            </table>
                        </div>
                        
                    </div>
                    
                </el-col>    
            </el-row>

            <div  class="increase-retail">      <!-- 增加零售 -->
                <el-dialog title="商品颜色(零售)" :visible.sync="increaseRetail">
                    <div class="addimg">
                        <el-upload
                        class="avatar-uploader"
                        action="api/Upload"
                        :show-file-list="false"
                        :on-success="handleAvatarSuccess"
                        :before-upload="beforeAvatarUpload">
                            <img v-if="imageUrl" :src="imageUrl" class="avatar">
                            <i v-else class="el-icon-plus avatar-uploader-icon"></i>
                        </el-upload>
                    </div>
                    <div class="Attributes">
                        <span>类型：</span>
                        <input type="text" v-model="retail.sku_name" placeholder="最多12个字" maxlength="12">
                    </div>
                    <div class="Attributes">
                        <span>库存：</span>
                        <input type="number" v-model="retail.product_inventory" placeholder="请输入库存">
                    </div>
                    <div class="Attributes">
                        <span>价格：</span>
                        <input type="number" v-model="retail.product_price" placeholder="请输入价格">
                    </div>
                    <div class="save">
                        <button class="fr" @click="addretail">确定</button>
                        <button class="fr" @click="increaseRetail=false">取消</button>
                    </div>
                </el-dialog>
            </div>

            <div  class="Increase-wholesale">      <!-- 增加批发 -->
                <el-dialog title="商品颜色(批发)" :visible.sync="IncreaseWholesale">
                    <div class="addimg">
                        <el-upload
                        class="avatar-uploader"
                        action=""
                        :show-file-list="false"
                        :on-success="handleAvatarSuccesss"
                        :before-upload="beforeAvatarUpload">
                            <img v-if="wholesale.imageUrl" :src="wholesale.imageUrl" class="avatar">
                            <i v-else class="el-icon-plus avatar-uploader-icon"></i>
                        </el-upload>
                    </div>
                    <div class="Attributes">
                        <span>类型：</span>
                        <input type="text" v-model="wholesale.sku_name" placeholder="最多12个字" maxlength="12">
                    </div>
                    <div class="Attributes">
                        <span>库存：</span>
                        <input type="number" v-model="wholesale.product_inventory" placeholder="请输入库存">
                    </div>
                    <div class="wholesale-interval">
                        <input class="inputs" type="number"  @input="wholesaleNum(1)" v-model="wholesale.wholesale_rules[0].start_sum">
                        <div class="line"></div>
                        <input class="inputs" type="number"  @input="wholesaleNum(2)" v-model="wholesale.wholesale_rules[0].end_sum">
                        <div class="price">
                            ￥
                            <input type="number"  @input="wholesaleNum(3)"  v-model="wholesale.wholesale_rules[0].sell_money">
                        </div>
                    </div>
                    <div class="wholesale-interval">
                        <input class="inputs" type="number" disabled @input="wholesaleNum(4)" v-model="wholesale.wholesale_rules[1].start_sum">
                        <div class="line"></div>
                        <input class="inputs" type="number" @input="wholesaleNum(5)"  v-model="wholesale.wholesale_rules[1].end_sum">
                        <div class="price">
                            ￥
                            <input type="number" @input="wholesaleNum(6)"  v-model="wholesale.wholesale_rules[1].sell_money">
                        </div>
                    </div>
                    <div class="wholesale-interval">
                        <input class="inputs" type="number"  disabled @input="wholesaleNum(7)"  v-model="wholesale.wholesale_rules[2].start_sum">
                        <div class="line"></div>
                        <input class="inputs" type="number"  @input="wholesaleNum(8)"  v-model="wholesale.wholesale_rules[2].end_sum">
                        <div class="price">
                            ￥
                            <input type="number"  @input="wholesaleNum(9)"  v-model="wholesale.wholesale_rules[2].sell_money">
                        </div>
                    </div>
                    <div class="save">
                        <button class="fr" @click="Wholesale">确定</button>
                        <button class="fr" @click="IncreaseWholesale=false">取消</button>
                    </div>
                </el-dialog>
            </div>

            <el-row>
                <el-col :span="9" :offset="1" class="product-description">
                    <div class="box">
                        <span>商品描述：</span>
                        <el-input
                        type="textarea"
                        :rows="5"
                        placeholder="请输入内容"
                        v-model="textarea">
                        </el-input>
                    </div>
                </el-col>
            </el-row>

             <el-row>
                <el-col :span="13" :offset="1" class="product-picture">
                    <div class="img">
                        商品描述图片：
                        <el-upload
                        action="api/Upload"
                        list-type="picture-card"
                        :on-preview="handlePictureCardPreview"
                        :on-remove="handleRemove"
                        :multiple='true'
                        :limit=5
                        :before-upload="beforeAvatarUpload"
                        :on-success="handleSuccess2">
                            <i class="el-icon-plus"></i>
                        </el-upload>
                    </div>
                    <p class="txt font14">建议尺寸：800*800像素，你可以拖拽图片调整顺序，最多5张</p>
                </el-col>
            </el-row>

            <el-row>
                <el-col :span="9" :offset="3" class="buttons" v-if="$route.query.type!=2">
                    <el-button class="firstButton" type="primary" @click="publishProduct">发布商品</el-button>
                    <el-button class="twoButton" @click="intoWarehouse">放入仓库</el-button>
                </el-col>
                <el-col :span="9" :offset="3" class="buttons" v-else>
                    <el-button class="firstButton" type="primary" @click="saveGoods">保存商品</el-button>
                </el-col>
            </el-row>
        </el-main>
    </el-container>
</template>

<script>
import {attributeInformation,addAttributes,deleteAttribute,productCategoryList,detail} from '@/api/goods/goods'
export default {
    data(){
        return{
            data:[],
            input:[     //商品属性
                {
                    id:0,
                    name:'商品名称',
                    value:'',
                    caveat:'商品名称必须填写',
                    show:false
                },
                {
                    id:1,
                    name:'商品编码',
                    value:'',
                    caveat:'请填写商品编码',
                    show:false
                },
                {
                    id:2,
                    name:'商品分类',
                    value:'',
                    caveat:'请填写商品分类',
                    show:false
                }
            ],
            attribute:[     //商品可增加的属性
                
            ],
            selectAccessoriesClassification:[],//选择配件分类列表
            product:[   //产品规格
                
            ],
            retail:{    //需要增加的零售商品
                sell_type:1
            }, 
            wholesale:{     //需要增加的批发商品
                imageUrl:'',
                sell_type:2,
                wholesale_rules:[{},{},{}]
            },
            textarea:'',    //商品描述
            dialogImageUrl: '',
            dialogVisible: false,
            imageUrl: '',   //零售属性图
            dialogTableVisible:false,   //商品分类弹框
            newAttribute:false,    //新增属性弹框
            increaseRetail:false,    //增加零售弹框
            IncreaseWholesale:false,   //增加批发弹框
            classNum:-1,  //配件分类索引标识
            attributeNum:-1,  //属性分类索引标识
            AddAttr:'',     //增加的属性
            attributeAdd:'',    //增加自定义属性
            imgNum:0,  //商品图片数量
        }
    },
    created(){
        if(this.$route.query.type==1){
            this.getData()
        }
    },
    methods: {
        getData(){
            let data = {
                productId:this.$route.query.id
            }
            detail(data).then(res=>{
                let params = res.data.data
                let paramsletparams = params.extended_properties
                paramsletparams.filter(res=>{
                    if(res.id == 'trialModels'){
                        res.value = res.value[0].content
                    }
                    res.deleteIcom=true
                })
                this.input[0].value=params.product_name
                this.input[1].value=params.product_sku_num
                this.input[2].value=params.classify_name
                this.input = this.input.concat(paramsletparams);
                this.product = params.sku
                this.textarea = params.product_details
            })
        },
        handleRemove(file, fileList) {    //删除图片钩子
            console.log(file, fileList);
        },
        handlePictureCardPreview(file) {  //放大图片钩子
            this.dialogImageUrl = file.url;
            this.dialogVisible = true;
        },
        beforeAvatarUpload(file) {      //判断图片类型
            if (!/^image\/(jpeg|png)$/.test(file.type)) {
                this.$confirm('上传图片暂时只支持JPG,PNG格式', '提示', {
                    confirmButtonText: '确定',
                    cancelButtonText: '取消',
                    type: 'error' ,
                    callback: action => {
                    this.$refs.form.resetFields();
                    this.$emit('closeEditUpload');
                    }
                })
            }
        },
        handleAvatarSuccess(res, file) {
            this.imageUrl = URL.createObjectURL(file.raw);
        },
        handleAvatarSuccesss(res, file) {
            this.wholesale.imageUrl = URL.createObjectURL(file.raw);
            console.log(this.wholesale.imageUrl)
        },
        handleSuccess(res,fileList){
            this.imgNum=fileList.length
            console.log(fileList)
        },
        handleSuccess2(res,fileList){
            console.log(res)
            console.log(fileList)
        },
        blueChange(value,index){    //属性框未填内容提示
            if(value=='' && index<3){
                this.input[index].show=true
            }else{
                this.input[index].show=false
            }
        },
        deleteattributes(index){ //移除属性
            this.$confirm('确定移除此属性？', '提示', {
            confirmButtonText: '确定',
            cancelButtonText: '取消',
            type: 'warning'
            }).then(() => {
            this.input.splice(index,1)
            this.$message({
                type: 'success',
                message: '删除成功!'
            });
            }).catch(() => {
            this.$message({
                type: 'info',
                message: '已取消删除'
            });          
            });
        },  
        focusChange(id){    //属性框模态框的弹出
            if(id==2){
                this.dialogTableVisible=true
                productCategoryList().then(res=>{
                    if(res.data.code==200){
                        this.selectAccessoriesClassification=res.data.data
                    }
                })
            }
            if(id == 'trialModels'){
                this.$router.push({path:'applicableModels'})
            }
        },
        classChange(index){     //商品分类状态改变
            this.classNum=index
            this.input[2].value=this.selectAccessoriesClassification[index].classify_name
            this.input[2].show=false
        },
        addAttribute(){     //新增属性
            this.newAttribute=true
            attributeInformation().then(res=>{
                this.attribute = res.data.data.filter(o=>{
                    return o.deleteIcom=true
                })
                console.log(this.attribute)
            })
        },   
        attributeChange(index){     //商品属性状态改变
            this.attributeNum=index
            this.AddAttr=this.attribute[index]
        },
        addattributes(){     //增加商品属性到填内容项
            if(!this.AddAttr==''){
                let num = 0
                this.input.filter(res=>{
                    if(res.id==this.AddAttr.id){
                        num=1
                    }
                })
                if(num==0){
                    this.input.push(this.AddAttr)
                }else{
                    this.$message.error('此属性已增加');
                }
            }
            this.newAttribute=false
        },
        customAttributes(){  //增加自定义属性
            let num=0
            this.attribute.filter(res=>{
                if(res.name===this.attributeAdd){
                    num=1
                }
            })
            
            if(num==1){
                this.$message.error('此属性已拥有');
            }else if(this.attributeAdd==''){
                this.$message.error('请输入需要增加的属性');
            }else{
                let data = {
                    name:this.attributeAdd
                }
                addAttributes(data).then(res=>{
                    if(res.data.code==200){
                        attributeInformation().then(res=>{
                            this.attribute = res.data.data.filter(o=>{
                                return o.deleteIcom=true
                            })
                        })
                    }
                })
            }
        },
        attributeDelete(name){  //删除自定义属性
            let data = {
                name:name
            }
            deleteAttribute(data).then(res=>{
                if(res.data.code==200){
                    attributeInformation().then(res=>{
                        this.attribute = res.data.data.filter(o=>{
                            return o.deleteIcom=true
                        })
                    })
                }
            })
        },

        addProduct(n){  //增加零售框的弹出
            if(n==1){
                this.increaseRetail=true
            }else if(n==2){
                this.IncreaseWholesale=true
            }
        },
        addretail(){   //确定增加零售产品
            if(this.retail.type==''){
                this.$message.error('商品类型不能为空');
            }else if(this.retail.inStock==''){
                this.$message.error('商品库存不能为空');
            }else if(this.retail.price==''){
                this.$message.error('商品价格不能为空');
            }else if(this.imageUrl==''){
                this.$message.error('商品图片不能为空');
            }else{
                this.product.push(this.retail)
                this.increaseRetail=false
                this.imageUrl=''
                this.retail = {sell_type:1}
            }
        },
        wholesaleNum(n){    //批发数量与价钱的拦截
            if(n==1){
                if (isNaN(this.wholesale.wholesale_rules[0].start_sum) || this.wholesale.wholesale_rules[0].start_sum < 0) {
                    this.wholesale.wholesale_rules[0].start_sum = 0
                    return;
                }
            }else if(n==2){
                if (isNaN(this.wholesale.wholesale_rules[0].end_sum) || this.wholesale.wholesale_rules[0].end_sum < 0) {
                    this.wholesale.wholesale_rules[0].end_sum = parseInt(this.wholesale.wholesale_rules[0].start_sum)+1
                    return
                }
                this.wholesale.wholesale_rules[1].start_sum  = parseInt(this.wholesale.wholesale_rules[0].end_sum)+1
            }else if(n==5){
                if (isNaN(this.wholesale.wholesale_rules[1].end_sum) || this.wholesale.wholesale_rules[1].end_sum < 0) {
                    this.wholesale.wholesale_rules[1].end_sum = parseInt(this.wholesale.wholesale_rules[1].start_sum)+1
                    return
                }
                this.wholesale.wholesale_rules[2].start_sum  = parseInt(this.wholesale.wholesale_rules[1].end_sum)+1
            }else if(n==3){
                if (isNaN(this.wholesale.wholesale_rules[0].sell_money) || this.wholesale.wholesale_rules[0].sell_money < 0) {
                    this.wholesale.wholesale_rules[0].sell_money=0
                    return
                }
            }else if(n==6){
                if (isNaN(this.wholesale.wholesale_rules[1].sell_money) || this.wholesale.wholesale_rules[1].sell_money < 0) {
                    this.wholesale.wholesale_rules[1].sell_money=0
                    return
                }
            }else if(n==9){
                if (isNaN(this.wholesale.wholesale_rules[2].sell_money) || this.wholesale.wholesale_rules[2].sell_money < 0) {
                    this.wholesale.wholesale_rules[2].sell_money=0
                    return
                }
            }
        },
        Wholesale(){    //确定增加批发产品
            this.product.push(this.wholesale)
            this.IncreaseWholesale = false
            this.wholesale = {imageUrl:'',sell_type:2,wholesale_rules:[{},{},{}]}
            console.log(this.product)
        },
        edit(index){ //编辑商品
            let data = this.product[index]
            if(data.sell_type==1){
                this.increaseRetail=true
                this.imageUrl=data.sku_img
                this.retail.sku_name=data.sku_name
                this.retail.product_inventory=data.product_inventory
                this.retail.product_price=data.product_price
            }else if(data.sell_type==2){
                this.IncreaseWholesale=true
            }
        },
        deleteSp(index){     //删除商品
            this.$confirm('此操作将永久删除该项, 是否继续?', '提示', {
                confirmButtonText: '确定',
                cancelButtonText: '取消',
                type: 'warning'
            })
            .then(() => {
                this.product.splice(index,1)
                this.$message({
                type: 'success',
                message: '删除成功!',
                });
            }).catch(() => {
                this.$message({
                type: 'info',
                message: '已取消删除'
                });          
            });
        },
        publishProduct(){   //发布商品
            if(this.input[0].value==''){
                this.$message(this.input[0].caveat);
            }else if(this.input[1].value==''){
                this.$message(this.input[1].caveat);
            }else if(this.input[2].value==''){
                this.$message(this.input[2].caveat);
            }else if(this.product.length==0){
                this.$message('请选择产品规格');
            }else if(this.imgNum==0){
                this.$message('最少需要一张商品图');
            }
        },
        saveGoods(){    //保存商品

        },
        intoWarehouse(){    //放入仓库
            
        }
    }
}

</script>
<style scoped>
.publishProduct .el-header{
    margin-left:1px;
}
.publishProduct .el-header .el-breadcrumb{
    line-height:60px
}
.publishProduct .arrow{
    width: 668px;
	height: 40px;
	background-color: #1491f2;
    line-height: 40px;
    text-align: center;
    position: relative;
}
.arrow .jian{ 
    width: 0; 
    height: 0; 
    border-top: 20px solid transparent; 
    border-left: 22px solid #1491f2;
    border-bottom: 20px solid transparent; 
    position: absolute;
    top: 0;
    right: -21px;
} 
.el-main{
    margin-top: 10px;
    margin-left: 10px;
}
.input{
    margin-top: 20px;
}
.input .box{
    margin-top: 15px;
    position: relative;
}
.input .box .inputpadd{
    padding-left: 10px;
    padding-right: 20px;
}
.input .box .soan{
    display: inline-block;
    min-width: 70px;
}
.input .box .right{
    position: absolute;
    margin-left: -21px;
    margin-top: 6px;
}
.input .box .outer{
    position: absolute;
    margin-left: 10px;
    margin-top: 5px;
}
.input input{
    width: 317px;
    height: 30px;
    padding-left: 1px;
    padding-right: 15px;
}
.input p{
    margin-left: 80px;
    margin-top: 8px;
    font-size: 12px;
    color: red;
}
.input .el-button{
    margin-top: 30px;
    margin-left: 250px;
}
.input .el-icon-plus{
    margin-right: 10px;
}
.product-picture{
    margin-top: 30px;
}
.product-picture .img{
    display: flex;
}
.product-picture .addImg{
    width: 100px;
    height: 100px;
    border:1px solid #ccc;
    line-height: 100px;
    text-align: center;
    color: #1491f2;
    position: relative;
    margin-right: 10px;
}
.product-picture input{
    position: absolute;
    width: 100px;
    height: 100px;
    opacity: 0;
    background-color: red;
    top: 0;
    left: 0;
}
.product-picture .txt{
    margin-top: 20px;
    margin-left: 70px;
    color: #999999;
}
.product-attributes{
    margin-top: 30px;
}
.product-attributes .blue{
    color: #1491f2;
    margin: 0 3px;
}
.product-picture .red{
    margin-left: 70px;
    margin-top: 10px;
    color: red;
}
.line{
    width: 100%;
    height: 111px;
    border-top: 1px solid #ccc;
    padding-top: 10px;
}
.line .name .txt{
    display: inline-block;
    width: 200px;
    margin-right: 100px;
}
.retail .price .red{
    color: red;
}
.retail .instock{
    margin-top: 10px;
}
.wholesale tr:first-child td:not(:first-child){
    color: red;
}
.wholesale td:not(:first-child){
    width: 120px;
    text-align: center;
}
.product-description{
    margin-top: 30px;
}
.product-description .box{
    display: flex;
}
.product-description .box span{
    width: 100px;
}
.product-description p{
    margin-left: 90px;
    margin-top: 20px;
    color: #ccc;
    font-size: 14px;
}
.buttons{
    margin-top: 50px;
    margin-bottom: 100px;
}
.firstButton{
    width: 200px;
    margin-right: 50px;
}
.twoButton{
    color: #1491f2;
}
.choose-category p{
    margin-bottom: 15px;
}
.choose-category .overauto{
    width: 375px;
    height: 290px;
    overflow: auto;
}
.choose-category .overauto .className:first-child{
    border-top: 1px solid #ccc;
}
.choose-category .overauto .className{
    width: 350px;
    height: 40px;
    line-height: 40px;
    padding-left: 10px;
    border-bottom: 1px solid #ccc;
    position: relative;
}
.choose-category .overauto .className .icon{
    position: absolute;
    right: 5px;
}
.choose-category .overauto .classChange{
    background-color: #f8f8f8;
    color: #36b32c;
}
.choose-category .save{
    padding-top: 10px;
    width: 100%;
    height: 50px;
}
.choose-category .save button{
    width: 90px;
    height: 30px;
    margin-left: 10px;
    line-height: 20px;
}
.choose-category .save button:first-child{
    background-color: #1491f2;
    color: #fff;
    border: 1px solid #1491f2;
    border-radius: 3px;
}
.choose-category .save button:last-child{
    background-color: #fff;
    color: #1491f2;
    border: 1px solid #1491f2;
    border-radius: 3px;
}
.new-attribute .add-attribute{
    width: 100%;
    height: 30px;
    margin-top: 20px;
    margin-bottom: 20px;
}
.new-attribute .add-attribute .txt{
    width: 310px;
    height: 30px;
    border: 1px solid #cccccc;
}
.new-attribute .add-attribute .fr{
    width: 50px;
    height: 30px;
    color: #1491f2;
    font-size: 20px;
    background-color: #f2f2f2;
	border: solid 1px #cccccc;
    border-left: none;
}
.new-attribute .overauto{
    width: 375px;
    height: 240px;
    overflow: auto;
    position: relative;
}
.new-attribute .overauto .system{
    position: absolute;
    right: 3px;
}
.new-attribute .overauto .delete{
    position: absolute;
    right: 3px;
    cursor: pointer;
}
.new-attribute .overauto .className:first-child{
    border-top: 1px solid #ccc;
}
.new-attribute .overauto .className{
    width: 345px;
    height: 40px;
    line-height: 40px;
    padding-left: 10px;
    border-bottom: 1px solid #ccc;
    position: relative;
}
.new-attribute .overauto .className .icon{
    margin-right: 10px;
}
.new-attribute .overauto .classChange{
    background-color: #f8f8f8;
    color: #36b32c;
}
.new-attribute .save{
    width: 100%;
    height: 50px;
    margin-top: 10px;
}
.new-attribute .save button{
    width: 90px;
    height: 30px;
    margin-left: 10px;
    line-height: 20px;
}
.new-attribute .save button:first-child{
    background-color: #1491f2;
    color: #fff;
    border: 1px solid #1491f2;
    border-radius: 3px;
}
.new-attribute .save button:last-child{
    background-color: #fff;
    color: #1491f2;
    border: 1px solid #1491f2;
    border-radius: 3px;
}

.increase-retail .addimg{
    width: 100px;
    height: 100px;
    margin: 20px auto;
    margin-bottom: 30px;
}
.increase-retail .Attributes input{
    width: 260px;
    height: 30px;
    margin-bottom: 10px;
    padding-left: 10px;
    border-radius: 2px;
    border: 1px solid #ccc;
}
.increase-retail .save{
    width: 100%;
    height: 50px;
    margin-top: 15px;
}
.increase-retail .save button{
    width: 90px;
    height: 30px;
    margin-left: 10px;
    line-height: 20px;
}
.increase-retail .save button:first-child{
    background-color: #1491f2;
    color: #fff;
    border: 1px solid #1491f2;
    border-radius: 3px;
}
.increase-retail .save button:last-child{
    background-color: #fff;
    color: #1491f2;
    border: 1px solid #1491f2;
    border-radius: 3px;
}

.Increase-wholesale .addimg{
    width: 100px;
    height: 100px;
    margin: 20px auto;
    margin-bottom: 30px;
}
.Increase-wholesale .Attributes input{
    width: 260px;
    height: 30px;
    margin-bottom: 10px;
    padding-left: 10px;
    border-radius: 2px;
    border: 1px solid #ccc;
}
.Increase-wholesale .wholesale-interval{
    width:100%;
    height: 25px;
    display: flex;
    margin-top: 10px;
}
.Increase-wholesale .wholesale-interval .line{
    width: 48px;
    height: 1px;
    margin-left: 10px;
    margin-right: 10px;
    margin-top: 10px;
}
.Increase-wholesale .wholesale-interval .inputs{
    width: 60px;
    height: 24px;
}
.Increase-wholesale .wholesale-interval .price{
    margin-left: 10px;
}
.Increase-wholesale .wholesale-interval .price input{
    width: 90px;
    height: 20px;
    color: red;
    border: none;
    border-bottom: 1px solid red;
}
.Increase-wholesale .save{
    width: 100%;
    height: 50px;
    margin-top: 15px;
}
.Increase-wholesale .save button{
    width: 90px;
    height: 30px;
    margin-left: 10px;
    line-height: 20px;
}
.Increase-wholesale .save button:first-child{
    background-color: #1491f2;
    color: #fff;
    border: 1px solid #1491f2;
    border-radius: 3px;
}
.Increase-wholesale .save button:last-child{
    background-color: #fff;
    color: #1491f2;
    border: 1px solid #1491f2;
    border-radius: 3px;
}
</style>

<style>
.publishProduct .el-upload--picture-card{
    width: 90px;
    height: 90px;
    line-height: 90px;
}
.publishProduct .el-upload--picture-card .el-icon-plus{
    height: 90px;
}
.publishProduct .el-upload-list__item{
    width:90px;
    height:90px;
}
.publishProduct  .el-dialog__wrapper .el-dialog{
    width: 400px;
    height: 440px;
    border-radius: 5px;
}
.publishProduct  .el-dialog__wrapper .el-dialog .el-dialog__body{
    padding-top:5px;
}


.publishProduct .increase-retail .el-dialog__wrapper .el-dialog{
    width: 350px;
    height: 400px;
    border-radius: 5px;
}
.publishProduct .increase-retail .avatar-uploader .el-upload {
    border: 1px dashed #d9d9d9;
    border-radius: 6px;
    cursor: pointer;
    position: relative;
    overflow: hidden;
  }
.publishProduct .increase-retail  .avatar-uploader .el-upload:hover {
    border-color: #409EFF;
  }
.publishProduct .increase-retail  .avatar-uploader-icon {
    font-size: 28px;
    color: #8c939d;
    width: 100px;
    height: 100px;
    line-height: 100px;
    text-align: center;
  }
.publishProduct .increase-retail .avatar {
    width: 100px;
    height: 100px;
    display: block;
  }


.publishProduct .Increase-wholesale .el-dialog__wrapper .el-dialog{
    width: 350px;
    height: 470px;
    border-radius: 5px;
}
.publishProduct .Increase-wholesale .el-dialog__wrapper .el-dialog{
    width: 350px;
    height: 470px;
    border-radius: 5px;
}
.publishProduct .Increase-wholesale .avatar-uploader .el-upload {
    border: 1px dashed #d9d9d9;
    border-radius: 6px;
    cursor: pointer;
    position: relative;
    overflow: hidden;
  }
.publishProduct .Increase-wholesale  .avatar-uploader .el-upload:hover {
    border-color: #409EFF;
  }
.publishProduct .Increase-wholesale  .avatar-uploader-icon {
    font-size: 28px;
    color: #8c939d;
    width: 100px;
    height: 100px;
    line-height: 100px;
    text-align: center;
  }
.publishProduct .Increase-wholesale .avatar {
    width: 100px;
    height: 100px;
    display: block;
}
</style>
